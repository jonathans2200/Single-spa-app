{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    loginUrl = 'http://185.209.230.19:8081/user/login';\n    //private loginUrl = '/api/user/login';\n    constructor(http) {\n      this.http = http;\n    }\n    login(userName, userPassword) {\n      const body = {\n        userName,\n        userPassword\n      };\n      console.log('Intentando login con:', body);\n      console.log('URL de login:', this.loginUrl);\n      return this.http.post(this.loginUrl, body).pipe(tap(response => {\n        sessionStorage.setItem('user', JSON.stringify(response));\n      }), catchError(this.handleError));\n    }\n    handleError(error) {\n      let errorMessage = 'Ocurrio un error';\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = `Client-side error: ${error.error.message}`;\n      } else {\n        errorMessage = `Server error: ${error.status}\\nMessage: ${error.message}`;\n      }\n      console.error(errorMessage);\n      return throwError(() => new Error(errorMessage));\n    }\n    logout() {\n      sessionStorage.removeItem('user');\n    }\n    isAuthenticated() {\n      return !!sessionStorage.getItem('user');\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}