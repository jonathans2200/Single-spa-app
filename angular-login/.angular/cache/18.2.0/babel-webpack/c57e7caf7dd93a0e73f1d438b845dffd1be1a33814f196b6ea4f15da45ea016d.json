{"ast":null,"code":"import { NgZone } from '@angular/core';\nimport { singleSpaAngular } from 'single-spa-angular';\n//test\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\nimport { bootstrapApplication } from '@angular/platform-browser';\n// if (environment.production) {\n//   enableProdMode();\n// }\n// const lifecycles = singleSpaAngular({\n//   bootstrapFunction: singleSpaProps => {\n//     singleSpaPropsSubject.next(singleSpaProps);\n//     return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n//   },\n//   template: '<app-root />',\n//   Router,\n//   NavigationStart,\n//   NgZone,\n// });\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    return bootstrapApplication(AppComponent, appConfig);\n  },\n  template: '<app-root />',\n  NgZone\n});\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;","map":{"version":3,"names":["NgZone","singleSpaAngular","AppComponent","appConfig","bootstrapApplication","lifecycles","bootstrapFunction","singleSpaProps","template","bootstrap","mount","unmount"],"sources":["/Users/pv/DEV/tests/Single-spa-app/angular-login/src/main.single-spa.ts"],"sourcesContent":["import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router, NavigationStart } from '@angular/router';\n\nimport { singleSpaAngular, getSingleSpaExtraProviders } from 'single-spa-angular';\n\n\n//import { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\n//test\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\n\n// const lifecycles = singleSpaAngular({\n//   bootstrapFunction: singleSpaProps => {\n//     singleSpaPropsSubject.next(singleSpaProps);\n//     return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n//   },\n//   template: '<app-root />',\n//   Router,\n//   NavigationStart,\n//   NgZone,\n// });\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: (singleSpaProps) => {\n    return bootstrapApplication(AppComponent, appConfig);\n  },\n  template: '<app-root />',\n  NgZone,\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;\n"],"mappings":"AAAA,SAAyBA,MAAM,QAAQ,eAAe;AAKtD,SAASC,gBAAgB,QAAoC,oBAAoB;AAOjF;AACA,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,oBAAoB,QAAQ,2BAA2B;AAEhE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC;EAClCK,iBAAiB,EAAGC,cAAc,IAAI;IACpC,OAAOH,oBAAoB,CAACF,YAAY,EAAEC,SAAS,CAAC;EACtD,CAAC;EACDK,QAAQ,EAAE,cAAc;EACxBR;CACD,CAAC;AAEF,OAAO,MAAMS,SAAS,GAAGJ,UAAU,CAACI,SAAS;AAC7C,OAAO,MAAMC,KAAK,GAAGL,UAAU,CAACK,KAAK;AACrC,OAAO,MAAMC,OAAO,GAAGN,UAAU,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}