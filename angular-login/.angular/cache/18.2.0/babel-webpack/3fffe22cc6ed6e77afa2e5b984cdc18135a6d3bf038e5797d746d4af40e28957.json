{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode, NgZone } from '@angular/core';\nimport { singleSpaAngular } from 'single-spa-angular';\n//import { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n//test\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\nif (environment.production) {\n  enableProdMode();\n}\n// const lifecycles = singleSpaAngular({\n//   bootstrapFunction: singleSpaProps => {\n//     singleSpaPropsSubject.next(singleSpaProps);\n//     return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n//   },\n//   template: '<app-root />',\n//   Router,\n//   NavigationStart,\n//   NgZone,\n// });\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: () => __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppComponent, appConfig),\n  template: '<app-root />',\n  NgZone\n});\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;","map":{"version":3,"names":["enableProdMode","NgZone","singleSpaAngular","environment","AppComponent","appConfig","production","lifecycles","bootstrapFunction","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","template","bootstrap","mount","unmount"],"sources":["/Users/pv/DEV/tests/Single-spa-app/angular-login/src/main.single-spa.ts"],"sourcesContent":["import { enableProdMode, NgZone } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { Router, NavigationStart } from '@angular/router';\n\nimport { singleSpaAngular, getSingleSpaExtraProviders } from 'single-spa-angular';\n\n\n//import { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\n//test\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// const lifecycles = singleSpaAngular({\n//   bootstrapFunction: singleSpaProps => {\n//     singleSpaPropsSubject.next(singleSpaProps);\n//     return platformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule);\n//   },\n//   template: '<app-root />',\n//   Router,\n//   NavigationStart,\n//   NgZone,\n// });\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: () => platformBrowserDynamic().bootstrapModule(AppComponent, appConfig),\n  template: '<app-root />',\n  NgZone,\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,MAAM,QAAQ,eAAe;AAKtD,SAASC,gBAAgB,QAAoC,oBAAoB;AAGjF;AACA,SAASC,WAAW,QAAQ,4BAA4B;AAGxD;AACA,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,IAAIF,WAAW,CAACG,UAAU,EAAE;EAC1BN,cAAc,EAAE;AAClB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMO,UAAU,GAAGL,gBAAgB,CAAC;EAClCM,iBAAiB,EAAEA,CAAA,KAAMC,mBAAA,CAAAC,eAAA,EAAwB,CAACC,eAAe,CAACP,YAAY,EAAEC,SAAS,CAAC;EAC1FO,QAAQ,EAAE,cAAc;EACxBX;CACD,CAAC;AAEF,OAAO,MAAMY,SAAS,GAAGN,UAAU,CAACM,SAAS;AAC7C,OAAO,MAAMC,KAAK,GAAGP,UAAU,CAACO,KAAK;AACrC,OAAO,MAAMC,OAAO,GAAGR,UAAU,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}